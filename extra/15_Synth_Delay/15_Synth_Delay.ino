//***************************************************
// Teensy Synth DIY Workshop
// Template file for your code
// 
// Pots on Pins: 14,15,16,17,18,19,22
//
// r.marogna 2021
//***************************************************

// useful headers - do not remove
#include "DIYSynthWorkshop.h"  
#include <Bounce.h>


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Paste here the code generated by the AudioDesign Tool
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#include <Audio.h>
#include <Wire.h>
#include <SPI.h>
#include <SD.h>
#include <SerialFlash.h>

// GUItool: begin automatically generated code
AudioSynthWaveform       waveform1;      //xy=108.75001525878906,256.99999809265137
AudioSynthWaveformModulated waveformMod1;   //xy=285.75001525878906,259.99999809265137
AudioMixer4              mixer2;         //xy=376.75000381469727,453.74999237060547
AudioEffectDelay         delay1;         //xy=503.7500190734863,161
AudioMixer4              mixer1;         //xy=653.7500152587891,135.0000114440918
AudioOutputI2S           i2s1;           //xy=892.7499809265137,134.00001430511475
AudioConnection          patchCord1(waveform1, 0, waveformMod1, 0);
AudioConnection          patchCord2(waveformMod1, 0, mixer2, 0);
AudioConnection          patchCord3(mixer2, delay1);
AudioConnection          patchCord4(delay1, 0, mixer1, 0);
AudioConnection          patchCord5(delay1, 1, mixer1, 1);
AudioConnection          patchCord6(delay1, 2, mixer1, 2);
AudioConnection          patchCord7(mixer1, 0, mixer2, 1);
AudioConnection          patchCord8(mixer1, 0, i2s1, 0);
AudioConnection          patchCord9(mixer1, 0, i2s1, 1);
// GUItool: end automatically generated code



//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Setup: The stuff in here is executed only once at startup
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
void setup() {

   // Setup input knobs to control the synth parameters
  setupKnobs();
  
  // Setup serial communication with your laptop to print debug info
  Serial.begin(9600);

   // Allocate memory for the audio processing - do not remove this line!
  // note: you may need to increase this value
  // Each block allows about 2.9 milliseconds of delay, 
  // so AudioMemory should be increased to allow for the longest delay tap.
  // for 1000 ms of delay you'll need at least 1000 /3 = 330 blocks
  AudioMemory(400);

  waveform1.begin( 1.0, 3, WAVEFORM_SAMPLE_HOLD);

  waveformMod1.begin( 0.5, 600, WAVEFORM_SINE);
  waveformMod1.frequencyModulation(2);

  // setup the delay times
  delay1.delay(0,450);
  delay1.delay(1,570);
  delay1.delay(2,720);

  mixer1.gain(0,0.25);
  mixer1.gain(1,0.25);
  mixer1.gain(2,0.25);

  mixer2.gain(0,0.5);
  mixer2.gain(1,0.0); // feedback channel!
}


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Loop: The stuff in here is executed continuously
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
void loop() {

  // do not remove this line
  updateKnobs();

  waveformMod1.amplitude(map(readKnob(14),0.0,1023.0,0.0, 1.f));
  
  waveformMod1.frequency(map(readKnob(15),0.0,1023.0,100.0, 8000.f)); 

  waveform1.amplitude(map(readKnob(16),0.0,1023.0,0.0, 1.f));
  
  waveform1.frequency(map(readKnob(17),0.0,1023.0,0.0, 10.f)); 
  
  mixer2.gain(1,map(readKnob(18),0.0,1023.0,0.0,0.98)); // feedback channel!
  
  // a small delay in the loop
  delay(5);  
}
